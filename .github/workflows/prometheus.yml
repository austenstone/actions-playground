name: build-runner-image
on: workflow_dispatch

jobs:
  build-image:
    # This must be your image-building larger runner
    runs-on: my-image-generation-runner
    # Create/Version your custom image
    snapshot:
      image-name: gh-actions-ubuntu-nodeexporter
      version: 1.*
    steps:
      - name: Install node_exporter
        run: |
          set -euo pipefail
          NODE_EXPORTER_VERSION="1.8.2"
          useradd --no-create-home --shell /usr/sbin/nologin nodeexp || true
          cd /tmp
          curl -fsSL -O https://github.com/prometheus/node_exporter/releases/download/v${NODE_EXPORTER_VERSION}/node_exporter-${NODE_EXPORTER_VERSION}.linux-amd64.tar.gz
          tar -xzf node_exporter-${NODE_EXPORTER_VERSION}.linux-amd64.tar.gz
          install -m 0755 node_exporter-${NODE_EXPORTER_VERSION}.linux-amd64/node_exporter /usr/local/bin/node_exporter
          rm -rf node_exporter-*.tar.gz node_exporter-*.linux-amd64

          cat >/etc/systemd/system/node_exporter.service <<'UNIT'
          [Unit]
          Description=Prometheus Node Exporter
          After=network-online.target
          Wants=network-online.target

          [Service]
          User=nodeexp
          Group=nodeexp
          ExecStart=/usr/local/bin/node_exporter \
            --web.listen-address=:9100 \
            --collector.textfile.directory=/var/lib/node_exporter/textfile_collector
          Restart=always
          RestartSec=5

          [Install]
          WantedBy=multi-user.target
          UNIT

          mkdir -p /var/lib/node_exporter/textfile_collector
          chown -R nodeexp:nodeexp /var/lib/node_exporter
          systemctl enable node_exporter

      # OPTIONAL: Install Prometheus in Agent mode (for push architecture)
      - name: Install Prometheus (Agent mode)
        if: ${{ env.USE_AGENT == 'true' }}
        env:
          USE_AGENT: "true"
        run: |
          set -euo pipefail
          PROM_VERSION="2.54.1"
          useradd --no-create-home --shell /usr/sbin/nologin promagent || true
          cd /tmp
          curl -fsSL -O https://github.com/prometheus/prometheus/releases/download/v${PROM_VERSION}/prometheus-${PROM_VERSION}.linux-amd64.tar.gz
          tar -xzf prometheus-${PROM_VERSION}.linux-amd64.tar.gz
          install -m 0755 prometheus-${PROM_VERSION}.linux-amd64/prometheus /usr/local/bin/prometheus
          install -m 0755 prometheus-${PROM_VERSION}.linux-amd64/promtool /usr/local/bin/promtool
          mkdir -p /etc/prom-agent /var/lib/prom-agent
          chown -R promagent:promagent /etc/prom-agent /var/lib/prom-agent

          cat >/etc/prom-agent/agent.yml <<'CFG'
          global:
            scrape_interval: 15s
            external_labels:
              runner_name: ${RUNNER_NAME}
              runner_group: ${RUNNER_GROUP}
          scrape_configs:
            - job_name: 'node'
              static_configs:
                - targets: ['127.0.0.1:9100']
          remote_write:
            - url: https://your-prom-remote-write-endpoint/api/v1/write
              # auth/example:
              # basic_auth:
              #   username: $REMOTE_USER
              #   password: $REMOTE_PASS
          CFG

          cat >/etc/systemd/system/prom-agent.service <<'UNIT'
          [Unit]
          Description=Prometheus Agent (scrape + remote_write)
          After=network-online.target
          Wants=network-online.target

          [Service]
          User=promagent
          Group=promagent
          Environment=RUNNER_NAME=%H
          Environment=RUNNER_GROUP=larger
          ExecStart=/usr/local/bin/prometheus \
            --config.file=/etc/prom-agent/agent.yml \
            --storage.agent.path=/var/lib/prom-agent \
            --enable-feature=agent
          Restart=always
          RestartSec=5

          [Install]
          WantedBy=multi-user.target
          UNIT

          systemctl enable prom-agent
