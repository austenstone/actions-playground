name: Hubbers popular repos
on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/get-hubbers-popular-repos.yml'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.AUSTEN_PAT }}
          script: |
            const org = 'octodemo';
            github.paginate("GET /orgs/{org}/members", {
              org
            });

            // get all repos for each user
            const repos = await Promise.all(
              users.map(async (user) => {
                const userRepos = await github.paginate("GET /users/{username}/repos", {
                  username: user.login
                });
                return userRepos;
              })
            );

            // flatten the array of arrays
            const allRepos = repos.flat();

            // sort the repos by stargazers and get the top 100
            const sortedRepos = allRepos
              .sort((a, b) => b.stargazers_count - a.stargazers_count)
              .slice(0, 100);

            const repoNames = sortedRepos.map((repo) => repo.name);

            // Set the output as a job summary
            console.log(`The most popular repos are: ${repoNames.join(', ')}`);
            await core.summary
              .addHeading('Most Popular Repos')
              .addTable([
                [{data: 'Repo Name', header: true}, {data: 'Stars', header: true}],
                ...sortedRepos.map((repo) => [`\n\n[${repo.name}](${repo.html_url})`, JSON.stringify(repo.stargazers_count)]),
              ])
              .write();